// <auto-generated />
using System;
using BaseHrm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaseHrm.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseHrm.Data.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AccountId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("IsMaster")
                        .IsUnique()
                        .HasFilter("[IsMaster] = 1");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            EmployeeId = 1,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "john.doe"
                        },
                        new
                        {
                            AccountId = 2,
                            EmployeeId = 2,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "jane.smith"
                        },
                        new
                        {
                            AccountId = 3,
                            EmployeeId = 3,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "alice.johnson"
                        },
                        new
                        {
                            AccountId = 4,
                            EmployeeId = 4,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "bob.brown"
                        },
                        new
                        {
                            AccountId = 5,
                            EmployeeId = 5,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "charlie.davis"
                        },
                        new
                        {
                            AccountId = 6,
                            EmployeeId = 6,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "diana.evans"
                        },
                        new
                        {
                            AccountId = 7,
                            EmployeeId = 7,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "ethan.franklin"
                        },
                        new
                        {
                            AccountId = 8,
                            EmployeeId = 8,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "fiona.garcia"
                        },
                        new
                        {
                            AccountId = 9,
                            EmployeeId = 9,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "george.harris"
                        },
                        new
                        {
                            AccountId = 10,
                            EmployeeId = 10,
                            IsMaster = false,
                            PasswordHash = "$2a$12$a/MI775Gp/RqAH3yOpLyc.LiemMXjZndSislMwLbbbY4Mgu4EFxii",
                            Username = "hannah.irving"
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.AccountPermission", b =>
                {
                    b.Property<int>("AccountPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountPermissionId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Actions")
                        .HasColumnType("int");

                    b.Property<int>("Module")
                        .HasColumnType("int");

                    b.Property<int>("ScopeType")
                        .HasColumnType("int");

                    b.Property<int?>("ScopeValue")
                        .HasColumnType("int");

                    b.HasKey("AccountPermissionId");

                    b.HasIndex("AccountId", "Module", "ScopeType", "ScopeValue");

                    b.ToTable("AccountPermissions");

                    b.HasData(
                        new
                        {
                            AccountPermissionId = 1,
                            AccountId = 1,
                            Actions = 1,
                            Module = 0,
                            ScopeType = 0
                        },
                        new
                        {
                            AccountPermissionId = 2,
                            AccountId = 2,
                            Actions = 4,
                            Module = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            AccountPermissionId = 3,
                            AccountId = 3,
                            Actions = 2,
                            Module = 2,
                            ScopeType = 0
                        },
                        new
                        {
                            AccountPermissionId = 4,
                            AccountId = 4,
                            Actions = 8,
                            Module = 4,
                            ScopeType = 0
                        },
                        new
                        {
                            AccountPermissionId = 5,
                            AccountId = 5,
                            Actions = 5,
                            Module = 5,
                            ScopeType = 0
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.AccountRole", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccountId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AccountRoles");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            AccountId = 4,
                            RoleId = 4
                        },
                        new
                        {
                            AccountId = 5,
                            RoleId = 5
                        },
                        new
                        {
                            AccountId = 6,
                            RoleId = 6
                        },
                        new
                        {
                            AccountId = 7,
                            RoleId = 7
                        },
                        new
                        {
                            AccountId = 8,
                            RoleId = 8
                        },
                        new
                        {
                            AccountId = 9,
                            RoleId = 9
                        },
                        new
                        {
                            AccountId = 10,
                            RoleId = 10
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.AttendanceRecord", b =>
                {
                    b.Property<int>("AttendanceRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceRecordId"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DurationHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOvertime")
                        .HasColumnType("bit");

                    b.Property<int?>("ShiftAssignmentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceRecordId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftAssignmentId");

                    b.ToTable("AttendanceRecords");

                    b.HasData(
                        new
                        {
                            AttendanceRecordId = 1,
                            CheckIn = new DateTime(2025, 9, 23, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 4.0m,
                            EmployeeId = 1,
                            IsOvertime = false,
                            ShiftAssignmentId = 1
                        },
                        new
                        {
                            AttendanceRecordId = 2,
                            CheckIn = new DateTime(2025, 9, 23, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 4.0m,
                            EmployeeId = 2,
                            IsOvertime = false,
                            ShiftAssignmentId = 2
                        },
                        new
                        {
                            AttendanceRecordId = 3,
                            CheckIn = new DateTime(2025, 9, 23, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 4.0m,
                            EmployeeId = 3,
                            IsOvertime = false,
                            ShiftAssignmentId = 3
                        },
                        new
                        {
                            AttendanceRecordId = 4,
                            CheckIn = new DateTime(2025, 9, 23, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 9.0m,
                            EmployeeId = 4,
                            IsOvertime = false,
                            ShiftAssignmentId = 4
                        },
                        new
                        {
                            AttendanceRecordId = 5,
                            CheckIn = new DateTime(2025, 9, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 4.0m,
                            EmployeeId = 5,
                            IsOvertime = false,
                            ShiftAssignmentId = 5
                        },
                        new
                        {
                            AttendanceRecordId = 6,
                            CheckIn = new DateTime(2025, 9, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 3.0m,
                            EmployeeId = 6,
                            IsOvertime = false,
                            ShiftAssignmentId = 6
                        },
                        new
                        {
                            AttendanceRecordId = 7,
                            CheckIn = new DateTime(2025, 9, 23, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 8.0m,
                            EmployeeId = 7,
                            IsOvertime = false,
                            ShiftAssignmentId = 7
                        },
                        new
                        {
                            AttendanceRecordId = 8,
                            CheckIn = new DateTime(2025, 9, 23, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 8.0m,
                            EmployeeId = 8,
                            IsOvertime = false,
                            ShiftAssignmentId = 8
                        },
                        new
                        {
                            AttendanceRecordId = 9,
                            CheckIn = new DateTime(2025, 9, 23, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 4.0m,
                            EmployeeId = 9,
                            IsOvertime = false,
                            ShiftAssignmentId = 9
                        },
                        new
                        {
                            AttendanceRecordId = 10,
                            CheckIn = new DateTime(2025, 9, 23, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOut = new DateTime(2025, 9, 23, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DurationHours = 9.0m,
                            EmployeeId = 10,
                            IsOvertime = false,
                            ShiftAssignmentId = 10
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("MaxHoursPerDay")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MaxHoursPerMonth")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "123 Main St",
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            Gender = "Nam",
                            HireDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Doe",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "1234567890",
                            PositionId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "456 Elm St",
                            DateOfBirth = new DateTime(1985, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            Gender = "Nữ",
                            HireDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Smith",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "0987654321",
                            PositionId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "789 Oak St",
                            DateOfBirth = new DateTime(1992, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            Gender = "Nữ",
                            HireDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Johnson",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "1112223334",
                            PositionId = 3
                        },
                        new
                        {
                            EmployeeId = 4,
                            Address = "101 Pine St",
                            DateOfBirth = new DateTime(1988, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.brown@example.com",
                            FirstName = "Bob",
                            Gender = "Nam",
                            HireDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Brown",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "4445556667",
                            PositionId = 4
                        },
                        new
                        {
                            EmployeeId = 5,
                            Address = "202 Maple St",
                            DateOfBirth = new DateTime(1995, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.davis@example.com",
                            FirstName = "Charlie",
                            Gender = "Nam",
                            HireDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Davis",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "7778889990",
                            PositionId = 5
                        },
                        new
                        {
                            EmployeeId = 6,
                            Address = "303 Birch St",
                            DateOfBirth = new DateTime(1991, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diana.evans@example.com",
                            FirstName = "Diana",
                            Gender = "Nữ",
                            HireDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Evans",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "3334445556",
                            PositionId = 6
                        },
                        new
                        {
                            EmployeeId = 7,
                            Address = "404 Cedar St",
                            DateOfBirth = new DateTime(1987, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ethan.franklin@example.com",
                            FirstName = "Ethan",
                            Gender = "Nam",
                            HireDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Franklin",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "6667778889",
                            PositionId = 7
                        },
                        new
                        {
                            EmployeeId = 8,
                            Address = "505 Spruce St",
                            DateOfBirth = new DateTime(1993, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fiona.garcia@example.com",
                            FirstName = "Fiona",
                            Gender = "Nữ",
                            HireDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Garcia",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "9990001112",
                            PositionId = 8
                        },
                        new
                        {
                            EmployeeId = 9,
                            Address = "606 Fir St",
                            DateOfBirth = new DateTime(1989, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "george.harris@example.com",
                            FirstName = "George",
                            Gender = "Nam",
                            HireDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Harris",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "2223334445",
                            PositionId = 9
                        },
                        new
                        {
                            EmployeeId = 10,
                            Address = "707 Aspen St",
                            DateOfBirth = new DateTime(1994, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hannah.irving@example.com",
                            FirstName = "Hannah",
                            Gender = "Nữ",
                            HireDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            LastName = "Irving",
                            MaxHoursPerDay = 8.00m,
                            MaxHoursPerMonth = 160.00m,
                            Phone = "5556667778",
                            PositionId = 10
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            Description = "Develops software",
                            Name = "Software Engineer"
                        },
                        new
                        {
                            PositionId = 2,
                            Description = "Manages projects",
                            Name = "Project Manager"
                        },
                        new
                        {
                            PositionId = 3,
                            Description = "Handles HR tasks",
                            Name = "HR Specialist"
                        },
                        new
                        {
                            PositionId = 4,
                            Description = "Creates designs",
                            Name = "Designer"
                        },
                        new
                        {
                            PositionId = 5,
                            Description = "Analyzes data",
                            Name = "Analyst"
                        },
                        new
                        {
                            PositionId = 6,
                            Description = "Tests software",
                            Name = "Tester"
                        },
                        new
                        {
                            PositionId = 7,
                            Description = "Administers systems",
                            Name = "Administrator"
                        },
                        new
                        {
                            PositionId = 8,
                            Description = "Handles sales",
                            Name = "Sales Representative"
                        },
                        new
                        {
                            PositionId = 9,
                            Description = "Manages marketing",
                            Name = "Marketing Specialist"
                        },
                        new
                        {
                            PositionId = 10,
                            Description = "Provides support",
                            Name = "Support Engineer"
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Description = "Full access",
                            Name = "Master"
                        },
                        new
                        {
                            RoleId = 2,
                            Description = "Administrative access",
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            Description = "Manager access",
                            Name = "Manager"
                        },
                        new
                        {
                            RoleId = 4,
                            Description = "Standard employee access",
                            Name = "Employee"
                        },
                        new
                        {
                            RoleId = 5,
                            Description = "HR department access",
                            Name = "HR"
                        },
                        new
                        {
                            RoleId = 6,
                            Description = "Finance access",
                            Name = "Finance"
                        },
                        new
                        {
                            RoleId = 7,
                            Description = "IT support access",
                            Name = "IT"
                        },
                        new
                        {
                            RoleId = 8,
                            Description = "Sales team access",
                            Name = "Sales"
                        },
                        new
                        {
                            RoleId = 9,
                            Description = "Marketing access",
                            Name = "Marketing"
                        },
                        new
                        {
                            RoleId = 10,
                            Description = "Limited guest access",
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.RolePermission", b =>
                {
                    b.Property<int>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolePermissionId"));

                    b.Property<int>("Actions")
                        .HasColumnType("int");

                    b.Property<int>("Module")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("ScopeType")
                        .HasColumnType("int");

                    b.Property<int?>("ScopeValue")
                        .HasColumnType("int");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("RoleId", "Module", "ScopeType", "ScopeValue");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RolePermissionId = 1,
                            Actions = 3,
                            Module = 0,
                            RoleId = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 2,
                            Actions = 5,
                            Module = 1,
                            RoleId = 2,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 3,
                            Actions = 9,
                            Module = 2,
                            RoleId = 3,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 4,
                            Actions = 1,
                            Module = 4,
                            RoleId = 4,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 5,
                            Actions = 6,
                            Module = 5,
                            RoleId = 5,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 6,
                            Actions = 3,
                            Module = 3,
                            RoleId = 6,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 7,
                            Actions = 12,
                            Module = 5,
                            RoleId = 7,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 8,
                            Actions = 1,
                            Module = 0,
                            RoleId = 8,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 9,
                            Actions = 2,
                            Module = 0,
                            RoleId = 9,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 10,
                            Actions = 5,
                            Module = 1,
                            RoleId = 10,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 11,
                            Actions = 15,
                            Module = 0,
                            RoleId = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 12,
                            Actions = 15,
                            Module = 1,
                            RoleId = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 13,
                            Actions = 15,
                            Module = 2,
                            RoleId = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 14,
                            Actions = 15,
                            Module = 3,
                            RoleId = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 15,
                            Actions = 15,
                            Module = 4,
                            RoleId = 1,
                            ScopeType = 0
                        },
                        new
                        {
                            RolePermissionId = 16,
                            Actions = 15,
                            Module = 5,
                            RoleId = 1,
                            ScopeType = 0
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExpectedHours")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ShiftId");

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ShiftId = 1,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            ExpectedHours = 4.0m,
                            Name = "Morning Shift 1",
                            ShiftTypeId = 1,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 2,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            ExpectedHours = 4.0m,
                            Name = "Afternoon Shift 1",
                            ShiftTypeId = 2,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 3,
                            EndTime = new TimeSpan(0, 22, 0, 0, 0),
                            ExpectedHours = 4.0m,
                            Name = "Night Shift 1",
                            ShiftTypeId = 3,
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 4,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            ExpectedHours = 9.0m,
                            Name = "Weekend Shift 1",
                            ShiftTypeId = 4,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 5,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            ExpectedHours = 4.0m,
                            Name = "Holiday Shift 1",
                            ShiftTypeId = 5,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 6,
                            EndTime = new TimeSpan(0, 20, 0, 0, 0),
                            ExpectedHours = 3.0m,
                            Name = "Overtime Shift 1",
                            ShiftTypeId = 6,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 7,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            ExpectedHours = 8.0m,
                            Name = "Flexible Shift 1",
                            ShiftTypeId = 7,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 8,
                            EndTime = new TimeSpan(0, 16, 30, 0, 0),
                            ExpectedHours = 8.0m,
                            Name = "Remote Shift 1",
                            ShiftTypeId = 8,
                            StartTime = new TimeSpan(0, 8, 30, 0, 0)
                        },
                        new
                        {
                            ShiftId = 9,
                            EndTime = new TimeSpan(0, 13, 0, 0, 0),
                            ExpectedHours = 4.0m,
                            Name = "Part-time Shift 1",
                            ShiftTypeId = 9,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            ShiftId = 10,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            ExpectedHours = 9.0m,
                            Name = "Full-time Shift 1",
                            ShiftTypeId = 10,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.ShiftAssignment", b =>
                {
                    b.Property<int>("ShiftAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftAssignmentId"));

                    b.Property<int?>("ApprovedByAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("ShiftAssignmentId");

                    b.HasIndex("ApprovedByAccountId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("EmployeeId", "Date");

                    b.ToTable("ShiftAssignments");

                    b.HasData(
                        new
                        {
                            ShiftAssignmentId = 1,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            ShiftId = 1
                        },
                        new
                        {
                            ShiftAssignmentId = 2,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            ShiftId = 2
                        },
                        new
                        {
                            ShiftAssignmentId = 3,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            ShiftId = 3
                        },
                        new
                        {
                            ShiftAssignmentId = 4,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            ShiftId = 4
                        },
                        new
                        {
                            ShiftAssignmentId = 5,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            ShiftId = 5
                        },
                        new
                        {
                            ShiftAssignmentId = 6,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 6,
                            ShiftId = 6
                        },
                        new
                        {
                            ShiftAssignmentId = 7,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 7,
                            ShiftId = 7
                        },
                        new
                        {
                            ShiftAssignmentId = 8,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 8,
                            ShiftId = 8
                        },
                        new
                        {
                            ShiftAssignmentId = 9,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 9,
                            ShiftId = 9
                        },
                        new
                        {
                            ShiftAssignmentId = 10,
                            ApprovedByAccountId = 1,
                            Date = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 10,
                            ShiftId = 10
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.ShiftType", b =>
                {
                    b.Property<int>("ShiftTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PayMultiplier")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ShiftTypeId");

                    b.ToTable("ShiftTypes");

                    b.HasData(
                        new
                        {
                            ShiftTypeId = 1,
                            Name = "Morning",
                            PayMultiplier = 1.0m
                        },
                        new
                        {
                            ShiftTypeId = 2,
                            Name = "Afternoon",
                            PayMultiplier = 1.0m
                        },
                        new
                        {
                            ShiftTypeId = 3,
                            Name = "Night",
                            PayMultiplier = 1.5m
                        },
                        new
                        {
                            ShiftTypeId = 4,
                            Name = "Weekend",
                            PayMultiplier = 2.0m
                        },
                        new
                        {
                            ShiftTypeId = 5,
                            Name = "Holiday",
                            PayMultiplier = 2.5m
                        },
                        new
                        {
                            ShiftTypeId = 6,
                            Name = "Overtime",
                            PayMultiplier = 1.5m
                        },
                        new
                        {
                            ShiftTypeId = 7,
                            Name = "Flexible",
                            PayMultiplier = 1.0m
                        },
                        new
                        {
                            ShiftTypeId = 8,
                            Name = "Remote",
                            PayMultiplier = 1.0m
                        },
                        new
                        {
                            ShiftTypeId = 9,
                            Name = "Part-time",
                            PayMultiplier = 1.0m
                        },
                        new
                        {
                            ShiftTypeId = 10,
                            Name = "Full-time",
                            PayMultiplier = 1.0m
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TeamId");

                    b.HasIndex("LeaderId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 1,
                            Name = "Team Alpha"
                        },
                        new
                        {
                            TeamId = 2,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 2,
                            Name = "Team Beta"
                        },
                        new
                        {
                            TeamId = 3,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 3,
                            Name = "Team Gamma"
                        },
                        new
                        {
                            TeamId = 4,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 4,
                            Name = "Team Delta"
                        },
                        new
                        {
                            TeamId = 5,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 5,
                            Name = "Team Epsilon"
                        },
                        new
                        {
                            TeamId = 6,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 6,
                            Name = "Team Zeta"
                        },
                        new
                        {
                            TeamId = 7,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 7,
                            Name = "Team Eta"
                        },
                        new
                        {
                            TeamId = 8,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 8,
                            Name = "Team Theta"
                        },
                        new
                        {
                            TeamId = 9,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 9,
                            Name = "Team Iota"
                        },
                        new
                        {
                            TeamId = 10,
                            CreatedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaderId = 10,
                            Name = "Team Kappa"
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TeamId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TeamMembers");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            EmployeeId = 1,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 2,
                            EmployeeId = 2,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 3,
                            EmployeeId = 3,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 4,
                            EmployeeId = 4,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 5,
                            EmployeeId = 5,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 6,
                            EmployeeId = 6,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 7,
                            EmployeeId = 7,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 8,
                            EmployeeId = 8,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 9,
                            EmployeeId = 9,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamId = 10,
                            EmployeeId = 10,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Account", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("BaseHrm.Data.Models.Account", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.AccountPermission", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Account", "Account")
                        .WithMany("AccountPermissions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.AccountRole", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseHrm.Data.Models.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.AttendanceRecord", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Employee", "Employee")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseHrm.Data.Models.ShiftAssignment", "ShiftAssignment")
                        .WithMany()
                        .HasForeignKey("ShiftAssignmentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");

                    b.Navigation("ShiftAssignment");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Employee", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Position");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.RolePermission", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Shift", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.ShiftType", "ShiftType")
                        .WithMany("Shifts")
                        .HasForeignKey("ShiftTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.ShiftAssignment", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Account", "ApprovedByAccount")
                        .WithMany()
                        .HasForeignKey("ApprovedByAccountId");

                    b.HasOne("BaseHrm.Data.Models.Employee", "Employee")
                        .WithMany("ShiftAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseHrm.Data.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedByAccount");

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Team", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.TeamMember", b =>
                {
                    b.HasOne("BaseHrm.Data.Models.Employee", "Employee")
                        .WithMany("TeamMemberships")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseHrm.Data.Models.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Account", b =>
                {
                    b.Navigation("AccountPermissions");

                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("AttendanceRecords");

                    b.Navigation("ShiftAssignments");

                    b.Navigation("TeamMemberships");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Role", b =>
                {
                    b.Navigation("AccountRoles");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.ShiftType", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("BaseHrm.Data.Models.Team", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
